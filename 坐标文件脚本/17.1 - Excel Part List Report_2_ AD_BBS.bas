' Sample 17: Excel Part List Report.BAS
' 
'This is a completely revised version of the same file renamed to: old_X & Y Part Location Report.bas
'This script has been generated by PowerPCB's VB Script Wizard on 8/23/2007 3:19:25 PM
'It will create reports in Microsoft Excel Format.
'You can use the following code as a skeleton for your own VB scripts

'Array of column names. You can modify it to rename columns
'Const Columns = Array("PartType", "RefDes", "PartDecal", "Pins", "Layer", "Orient.", "X", "Y", "SMD", "Glued")
Const Columns = Array("Designator",	"Footprint",	"Mid X",	"Mid Y",	"Ref X",	"Ref Y",	"Pad X",	"Pad Y",	"Layer",	"Rotation",	"Comment")',"Pins","SMD", "Glued")


Sub Main
    'MsgBox "Hi, you are using " & ActiveDocument.FullName & " located in " &ActiveDocument.path
	'MsgBox "Note: The component 0 point must be at the center of the component" , vbOkOnly , "Prompt"
		
	
	Dim ComponentLayerTypeTop
	Dim ComponentLayerTypeBOT
	ComponentLayerTypeTop = -1
	ComponentLayerTypeBOT  = -1
	
	
	For Each slayer In ActiveDocument.Layers


		Dim sLayerType 
		Dim sLayerNumber 	

		sLayerType = slayer.Type
		sLayerNumber = slayer.Number
		
		If sLayerType = ppcbLayerComponent  Then
			If ComponentLayerTypeTop = -1   Then
				
				ComponentLayerTypeTop = sLayerNumber
				
			ElseIf  ComponentLayerTypeBOT = -1   Then
			
				ComponentLayerTypeBOT  = sLayerNumber
				
			End If		
		End If
	Next slayer
	
	
	
	tempFile = DefaultFilePath & "\temp.txt"
	Open tempFile For Output As #1

	'Output table header
	For i = 0 to UBound(Columns)
		OutCell Columns(i)
	Next
	Print #1
	'Output table rows
	'
		OutCell ""       
		OutCell ""
		OutCell ""
		OutCell ""
		
		OutCell ""
		OutCell ""
		
		OutCell ""
		OutCell ""	
		
		OutCell ""
		OutCell ""
		OutCell ""	
		Print #1
		
	ActiveDocument.unit = ppcbUnitMetric
		
	For Each part in ActiveDocument.Components		
		OutCell part.Name        
		OutCell part.Decal
		
		Dim centerX  As Single
		Dim centerY  As Single
		Dim cout  As Integer
		centerX = 0.0
		centerY = 0.0
		cout = 0
		
		For Each nextCompPin In part.Pins
			centerX = centerX+nextCompPin.PositionX 
			centerY = centerY+nextCompPin.PositionY 
		Next nextCompPin
		'centerPositionX = Format$(centerX/(part.Pins.Count), "#.00")
		'centerPositionY = Format$(centerY/(part.Pins.Count), "#.00")
		
		if centerX <> 0 then
			OutCell Format( centerX/(part.Pins.Count) , "0.000") &"mm"
		else
		    OutCell Format( centerX , "0.000") &"mm"
		end if
		
		if	centerY <>  0 then
			OutCell Format( centerY/(part.Pins.Count), "0.000") &"mm"
		else
			OutCell Format( centerY , "0.000") &"mm"
		end if
 		
		
		'OutCell Format(part.PositionX, "0.000")
		'OutCell Format(part.PositionY, "0.000")
		

		OutCell Format(part.PositionX, "0.000") &"mm"
		OutCell Format(part.PositionY, "0.000") &"mm"

		Set pin_1 = ActiveDocument.Pins( part.Name & ".1")
		
		If pin_1 Is Nothing Then
			OutCell ""
			OutCell ""		
		Else
			OutCell Format(ActiveDocument.Pins( part.Name  & ".1").PositionX, "0.000") &"mm"
			OutCell Format(ActiveDocument.Pins( part.Name  & ".1").PositionY, "0.000") &"mm"	
		End If
		
		Dim partLayerName As String	
		
		partLayerName =  ActiveDocument.LayerName(part.layer)
		
		If partLayerName = "TopLayer" Or partLayerName = "Top" Then
			partLayerName = "T"	
		ElseIf  partLayerName = "Botlayer" Or partLayerName = "Bot"  Or partLayerName = "Bottom" Then
			partLayerName = "B"	
		ElseIf part.layer = ComponentLayerTypeTop  And ComponentLayerTypeTop<> -1 Then
			partLayerName = "T"
		ElseIf  part.layer = ComponentLayerTypeBOT And ComponentLayerTypeBOT<> -1 Then		
			partLayerName = "B"		
		End If
		
		OutCell partLayerName
		
		OutCell part.Orientation
		OutCell part.PartType
		
		'OutCell part.Pins.Count
		'OutCell Format(part.IsSMD, "Yes/No")
		'OutCell Format(part.Glued, "Yes/No")
		
		Print #1
	Next part

	Close #1
	ExportToExcel ActiveDocument.FullName  
	
	'MsgBox "The export is complete" , vbOkOnly , "Prompt"
End Sub

Sub ExportToExcel (txt As String)
	FillClipboard
	Dim xl As Object
	On Error Resume Next
	Set xl =  GetObject(,"Excel.Application")
	On Error GoTo ExcelError	' Enable error trapping.
	If xl Is Nothing Then
		Set xl =  CreateObject("Excel.Application")
	End If
	xl.Visible = True
	xl.Workbooks.Add
	xl.Range("A:K").NumberFormat = "@"
	xl.Range("A1:K1").NumberFormat = "@"
	xl.ActiveSheet.Paste
	xl.Range("A1:K1").Font.Bold = True
	xl.Range("A1:K1").NumberFormat = "@"
	'xl.ActiveSheet.UsedRange.Columns.AutoFit
	xl.Range("A1").Select

	On Error GoTo 0 ' Disable error trapping. 
	Exit Sub    

ExcelError:
	MsgBox Err.Description, vbExclamation, "Error Running Excel"
	On Error GoTo 0 ' Disable error trapping.    
	Exit Sub
End Sub

Sub OutCell (txt As String)
	Print #1, txt; vbTab;
End Sub

Sub FillClipboard
	' Load whole file to string variable    
	tempFile = DefaultFilePath & "\temp.txt"
	Open tempFile  For Input As #1
	L = LOF(1)
	AllData$ = Input$(L,1)
	Close #1
	'Copy whole data to clipboard
	Clipboard AllData$ 
	Kill tempFile
End Sub
